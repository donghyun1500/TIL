###알고리즘 배우기 둘째날!!###

<참고>

##1. Swap하는 방법. a, b = b, a 라고 작성하면 됨!

##2.스택 이라는 자료 구조에서 제공하는 기능!

push(data) : 맨 앞에 데이터 넣기

pop() : 맨 앞의 데이터 뽑기

peek() : 맨 앞의 데이터 보기

isEmpty(): 스택이 비었는지 안 비었는지 여부 반환해주기

###2.퀄 이라는 자료 구조에서 제공하는 기능!!

enqueue(data) : 맨 뒤에 데이터 추가하기 

dequeue() : 맨 앞의 데이터 뽑기

peek() : 맨 앞의 데이터 보기

isEmpty(): 큐가 비었는지 안 비었는지 여부 반환해주기

##3.

첫번째, 버블정렬이란?

첫 번째 자료와 두 번째 자료를, 두 번째 자료와 세 번째 자료를, 세 번째와 네 번째를, 

… 이런 식으로 (마지막-1)번째 자료와 마지막 자료를 비교하여 교환하면서 자료를 정렬하는 방식!

선택정렬?

가장 작은 값을 선택해 알맞은 위치로 옮기는 방식!

삽입정렬?

고른 값을 알만은 위치로 삽입하여 정렬하는 방식!

선택 정렬은 현재 데이터의 상태와 상관없이 항상 비교하고 위치를 바꾸지만,

삽입 정렬은 필요할 때만 위치를 변경하므로 더 효율적인 방식!

병합정렬? merge?

병합 정렬은 배열의 앞부분과 뒷부분의 두 그룹으로 나누어 각각 정렬한 후 병합하는 작업을 반복하는 알고리즘!

병합정렬? mergeSort?

분할 정복은 문제를 작은 2개의 문제로 분리하고 각각을 해결한 다음, 결과를 모아서 원래의 문제를 해결하는 전략!

문제를 쪼개서 일부분들을 해결하다보면 전체가 해결 됨!

이를 분할 정복, Divide and Conquer 라고 함!

*재귀적인 함수코드와 비슷하여 꼭 재귀함수에 필수 조건인 탈수 조건도 만들어줘야 함.*


두번째, 스택이란??

스택은 데이터를 임시 저장할 때 사용하는 자료구조로 데이터의 입력과 출력 순서는 후입선출(LIFO) 방식임.


큐란?

스택과 같은 데이터를 임시 저장하는 자료구조! 하지만 스택과 다르게 선입선출(FIFO) 방식임.

하지만 스택과 다르게 끝과 시작의 노드를 전부 가지고 있어야 하므로,

self.head 와 self.tail 을 가지고 시작함!


*둘 다 링크드리스트와 아주 유사함!*


